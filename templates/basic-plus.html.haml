!!!
/
  \/*
  * jQuery File Upload Plugin Basic Plus Demo 1.4.0
  * https://github.com/blueimp/jQuery-File-Upload
  *
  * Copyright 2013, Sebastian Tschan
  * https://blueimp.net
  *
  * Licensed under the MIT license:
  * http://www.opensource.org/licenses/MIT
  */
%html{:lang => "en"}
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    / Force latest IE rendering engine or ChromeFrame if installed
    /[if IE] <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    %meta{:charset => "utf-8"}/
    %title jQuery File Upload Demo - Basic Plus version
    %meta{:content => "File Upload widget with multiple file selection, drag&drop support, progress bar, validation and preview images, audio and video for jQuery. Supports cross-domain, chunked and resumable file uploads. Works with any server-side platform (Google App Engine, PHP, Python, Ruby on Rails, Java, etc.) that supports standard HTML form file uploads.", :name => "description"}/
    %meta{:content => "width=device-width, initial-scale=1.0", :name => "viewport"}/
    / Bootstrap styles
    %link{:href => "//netdna.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css", :rel => "stylesheet"}/
    / Generic page styles
    %link{:href => "css/style.css", :rel => "stylesheet"}/
    / CSS to style the file input field as button and adjust the Bootstrap progress bars
    %link{:href => "css/jquery.fileupload.css", :rel => "stylesheet"}/
  %body
    .navbar.navbar-default.navbar-fixed-top
      .container
        .navbar-header
          %button.navbar-toggle{"data-target" => ".navbar-fixed-top .navbar-collapse", "data-toggle" => "collapse", :type => "button"}
            %span.icon-bar
            %span.icon-bar
            %span.icon-bar
          %a.navbar-brand{:href => "https://github.com/blueimp/jQuery-File-Upload"} jQuery File Upload
        .navbar-collapse.collapse
          %ul.nav.navbar-nav
            %li
              %a{:href => "https://github.com/blueimp/jQuery-File-Upload/tags"} Download
            %li
              %a{:href => "https://github.com/blueimp/jQuery-File-Upload"} Source Code
            %li
              %a{:href => "https://github.com/blueimp/jQuery-File-Upload/wiki"} Documentation
            %li
              %a{:href => "https://blueimp.net"} Â© Sebastian Tschan
    .container
      %h1 jQuery File Upload Demo
      %h2.lead Basic Plus version
      %ul.nav.nav-tabs
        %li
          %a{:href => "basic.html"} Basic
        %li.active
          %a{:href => "basic-plus.html"} Basic Plus
        %li
          %a{:href => "index.html"} Basic Plus UI
        %li
          %a{:href => "angularjs.html"} AngularJS
        %li
          %a{:href => "jquery-ui.html"} jQuery UI
      %br/
      %blockquote
        %p
          File Upload widget with multiple file selection, drag&amp;drop support, progress bar, validation and preview images, audio and video for jQuery.
          %br/
          Supports cross-domain, chunked and resumable file uploads and client-side image resizing.
          %br/
          Works with any server-side platform (PHP, Python, Ruby on Rails, Java, Node.js, Go etc.) that supports standard HTML form file uploads.
      %br/
      / The fileinput-button span is used to style the file input field as button
      %span.btn.btn-success.fileinput-button
        %i.glyphicon.glyphicon-plus
        %span Add files...
        / The file input field used as target for the file upload widget
        %input#fileupload{:multiple => "multiple", :name => "files[]", :type => "file"}/
      %br/
      %br/
      / The global progress bar
      #progress.progress
        .progress-bar.progress-bar-success
      / The container for the uploaded files
      #files.files
      %br/
      .panel.panel-default
        .panel-heading
          %h3.panel-title Demo Notes
        .panel-body
          %ul
            %li
              The maximum file size for uploads in this demo is
              %strong 999 KB
              (default file size is unlimited).
            %li
              Only image files (
              %strong> JPG, GIF, PNG
              ) are allowed in this demo (by default there is no file type restriction).
            %li
              Uploaded files will be deleted automatically after
              %strong 5 minutes or less
              (demo files are stored in memory).
            %li
              You can
              %strong drag &amp; drop
              files from your desktop on this webpage (see
              = succeed ")." do
                %a{:href => "https://github.com/blueimp/jQuery-File-Upload/wiki/Browser-support"} Browser support
            %li
              Please refer to the
              %a{:href => "https://github.com/blueimp/jQuery-File-Upload"} project website
              and
              %a{:href => "https://github.com/blueimp/jQuery-File-Upload/wiki"} documentation
              for more information.
            %li
              Built with the
              %a{:href => "http://getbootstrap.com/"} Bootstrap
              CSS framework and Icons from
              = succeed "." do
                %a{:href => "http://glyphicons.com/"} Glyphicons
    %script{:src => "//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"}
    / The jQuery UI widget factory, can be omitted if jQuery UI is already included
    %script{:src => "js/vendor/jquery.ui.widget.js"}
    / The Load Image plugin is included for the preview images and image resizing functionality
    %script{:src => "//blueimp.github.io/JavaScript-Load-Image/js/load-image.all.min.js"}
    / The Canvas to Blob plugin is included for image resizing functionality
    %script{:src => "//blueimp.github.io/JavaScript-Canvas-to-Blob/js/canvas-to-blob.min.js"}
    / Bootstrap JS is not required, but included for the responsive demo navigation
    %script{:src => "//netdna.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"}
    / The Iframe Transport is required for browsers without support for XHR file uploads
    %script{:src => "js/jquery.iframe-transport.js"}
    / The basic File Upload plugin
    %script{:src => "js/jquery.fileupload.js"}
    / The File Upload processing plugin
    %script{:src => "js/jquery.fileupload-process.js"}
    / The File Upload image preview & resize plugin
    %script{:src => "js/jquery.fileupload-image.js"}
    / The File Upload audio preview plugin
    %script{:src => "js/jquery.fileupload-audio.js"}
    / The File Upload video preview plugin
    %script{:src => "js/jquery.fileupload-video.js"}
    / The File Upload validation plugin
    %script{:src => "js/jquery.fileupload-validate.js"}
    :javascript
      /*jslint unparam: true, regexp: true */
      /*global window, $ */
      $(function () {
          'use strict';
          // Change this to the location of your server-side upload handler:
          var url = window.location.hostname === 'blueimp.github.io' ?
                      '//jquery-file-upload.appspot.com/' : 'server/php/',
              uploadButton = $('<button/>')
                  .addClass('btn btn-primary')
                  .prop('disabled', true)
                  .text('Processing...')
                  .on('click', function () {
                      var $this = $(this),
                          data = $this.data();
                      $this
                          .off('click')
                          .text('Abort')
                          .on('click', function () {
                              $this.remove();
                              data.abort();
                          });
                      data.submit().always(function () {
                          $this.remove();
                      });
                  });
          $('#fileupload').fileupload({
              url: url,
              dataType: 'json',
              autoUpload: false,
              acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
              maxFileSize: 999000,
              // Enable image resizing, except for Android and Opera,
              // which actually support image resizing, but fail to
              // send Blob objects via XHR requests:
              disableImageResize: /Android(?!.*Chrome)|Opera/
                  .test(window.navigator.userAgent),
              previewMaxWidth: 100,
              previewMaxHeight: 100,
              previewCrop: true
          }).on('fileuploadadd', function (e, data) {
              data.context = $('<div/>').appendTo('#files');
              $.each(data.files, function (index, file) {
                  var node = $('<p/>')
                          .append($('<span/>').text(file.name));
                  if (!index) {
                      node
                          .append('<br>')
                          .append(uploadButton.clone(true).data(data));
                  }
                  node.appendTo(data.context);
              });
          }).on('fileuploadprocessalways', function (e, data) {
              var index = data.index,
                  file = data.files[index],
                  node = $(data.context.children()[index]);
              if (file.preview) {
                  node
                      .prepend('<br>')
                      .prepend(file.preview);
              }
              if (file.error) {
                  node
                      .append('<br>')
                      .append($('<span class="text-danger"/>').text(file.error));
              }
              if (index + 1 === data.files.length) {
                  data.context.find('button')
                      .text('Upload')
                      .prop('disabled', !!data.files.error);
              }
          }).on('fileuploadprogressall', function (e, data) {
              var progress = parseInt(data.loaded / data.total * 100, 10);
              $('#progress .progress-bar').css(
                  'width',
                  progress + '%'
              );
          }).on('fileuploaddone', function (e, data) {
              $.each(data.result.files, function (index, file) {
                  if (file.url) {
                      var link = $('<a>')
                          .attr('target', '_blank')
                          .prop('href', file.url);
                      $(data.context.children()[index])
                          .wrap(link);
                  } else if (file.error) {
                      var error = $('<span class="text-danger"/>').text(file.error);
                      $(data.context.children()[index])
                          .append('<br>')
                          .append(error);
                  }
              });
          }).on('fileuploadfail', function (e, data) {
              $.each(data.files, function (index) {
                  var error = $('<span class="text-danger"/>').text('File upload failed.');
                  $(data.context.children()[index])
                      .append('<br>')
                      .append(error);
              });
          }).prop('disabled', !$.support.fileInput)
              .parent().addClass($.support.fileInput ? undefined : 'disabled');
      });
